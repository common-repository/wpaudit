<?php
/**
 * Class Settings Duplicate Slugs
 *
 * @since 1.0.0
 *
 * @package digital_elite\wp_audit
 */

namespace digital_elite\wp_audit;

/**
 * Partial settings page
 */
class Settings_Duplicate_Slugs {

	private $ajax;
	private $background_processing;

	/**
	 * Constructor.
	 *
	 * @since 1.0.0
	 */
	public function __construct( AJAX $ajax, Background_Processing $background_processing ) {
		$this->ajax                  = $ajax;
		$this->background_processing = $background_processing;
	}


	/**
	 * Run all of the plugin functions.
	 *
	 * @since 1.0.0
	 */
	public function run() {
		add_action( 'admin_init', array( $this, 'init_settings_page' ) );
		add_action( 'init', array( $this, 'download' ) );
	}

	public function init_settings_page() {
		add_settings_section(
			DIGITAL_ELITE_WP_AUDIT_PREFIX . '_duplicate_slugs',
			esc_html__( 'Duplicate Slugs', 'wp-audit' ),
			function () {
				?>

				<p>WordPress makes a slug for most content (pages, posts and custom post types) and taxonomy (tags and categories) and requires these slugs to be unique throughout a site. In order to maintain this uniqueness when slugs are autogenerated, WordPress will append a number (e.g. -2) to a slug of a post or page if it already exists in the database.</p>

				<p>Note: WordPress will append the number even if the duplicate post or page has been moved to the trash (this is a good reason to keep your drafts, pending and trash clean). The "dash two" issue can also occur if images have the same file name as a post or page.</p>

				<p>Use the button below to identify duplicate slugs on your site. The CSV file will include post information such as: date, name, post ID, slug and URL (where the URL contains a hyphen and a number (e.g. -2, -3).</p>

				<form method="POST">
					<?php submit_button( 'Find Duplicate Slugs' ); ?>
					<?php wp_nonce_field( 'run_duplicate_slugs_check_action', 'run_duplicate_slugs_check_nonce' ); ?>
				</form>
				<?php
			},
			DIGITAL_ELITE_WP_AUDIT_PREFIX . '_duplicate_slugs_settings'
		);
	}

	function download() {
		if ( isset( $_POST['run_duplicate_slugs_check_nonce'] ) && wp_verify_nonce( $_POST['run_duplicate_slugs_check_nonce'], 'run_duplicate_slugs_check_action' ) ) {

			$args = [
				'posts_per_page' => -1,
				'post_types'     => get_post_types(),
				'post_status'    => get_post_statuses(),
			];

			$query                     = new \WP_Query( $args );
			$potential_duplicate_posts = array();
			if ( $query->have_posts() ) {
				foreach ( $query->posts as $post ) {
					$r = preg_match_all( '/.*?(\-\d+)$/', $post->post_name, $matches );
					if ( $r > 0 ) {
						$len  = strlen( $matches[1][0] );
						$slug = substr_replace( $post->post_name, '', - $len );
						$duplicate_args  = array(
							'name'           => $slug,
							'posts_per_page' => 1,
							'post_types'     => get_post_types(),
							'post_status'    => get_post_statuses(),
						);
						$duplicate_query = new \WP_Query( $duplicate_args );
						if ( $duplicate_query->have_posts() && isset( $duplicate_query->posts[0] ) ) {
							$potential_duplicate_posts[ $post->post_name ]['duplicate'] = $post;
							$potential_duplicate_posts[ $post->post_name ]['original']  = $duplicate_query->posts[0];
						}
					}
				}
			}

			header( "Content-type: text/csv" );
			header( "Content-Disposition: attachment; filename=potential-duplicate-posts.csv" );
			header( "Pragma: no-cache" );
			header( "Expires: 0" );

			echo 'Duplicate Title,Duplicate Slug,Duplicate Post Type,Duplicate Post Status,Duplicate Edit Link,Original Title,Original Slug,Original Post Type,Original Post Status,Original Edit Link,' . "\n";

			foreach ( $potential_duplicate_posts as $post ) {
				$string  = '';
				$string .= '"' . $post['duplicate']->post_title . '",';
				$string .= '"' . $post['duplicate']->post_name . '",';
				$string .= '"' . $post['duplicate']->post_type . '",';
				$string .= '"' . $post['duplicate']->post_status . '",';
				$string .= '"' . get_edit_post_link( $post['duplicate']->ID ) . '",';
				$string .= '"' . $post['original']->post_title . '",';
				$string .= '"' . $post['original']->post_name . '",';
				$string .= '"' . $post['original']->post_type . '",';
				$string .= '"' . $post['original']->post_status . '",';
				$string .= '"' . get_edit_post_link( $post['original']->ID ) . '",';
				$string .= "\n";

				echo $string;
			}

			exit;
		}
	}
}
